/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace acemall_category {
    export namespace category {
        export interface ReqCategory {
        categoryName?: string;
        categoryLevel?: number;
        categoryParent?: number;
        categoryImage?: string;
        categoryDescription?: string;
        categoryId?: number;
        }
        export interface ResCategory {
        code: number;
        message: string;
        data?: category.ReqCategory;
        }
        export interface Count {
        count?: number;
        }
        export interface ResCount {
        code: number;
        message: string;
        data?: category.Count;
        }
        export interface ReqPageParams {
        page?: number;
        size?: number;
        }
        export interface ResPages {
        code: number;
        message: string;
        data?: category.ReqCategory[];
        }
        export interface CategroyService {
            createCategory(
                data: ReqCategory,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResCategory>;
            updateCategory(
                data: ReqCategory,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResCategory>;
            deleteCategory(
                data: ReqCategory,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResCount>;
            findCategoryByName(
                data: ReqCategory,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResCategory>;
            findCategoryById(
                data: ReqCategory,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResCategory>;
            findAll(
                data: ReqPageParams,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResPages>;
        }
    }
}

