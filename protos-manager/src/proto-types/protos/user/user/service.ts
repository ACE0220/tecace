/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace acemall_user {
    export namespace user {
        export interface ReqUserNameAndPassword {
        userName: string;
        userPassword: string;
        }
        export interface ReqUserInfoByName {
        userName: string;
        }
        export interface ReqUserInfoById {
        userId: string;
        }
        export interface UserInfo {
        userId?: number;
        userName: string;
        token?: string;
        }
        export interface ResUserInfo {
        code: number;
        message: string;
        data?: user.UserInfo;
        }
        export interface ResUserInfoArray {
        code: number;
        message: string;
        data?: user.UserInfo[];
        }
        export interface Count {
        count: number;
        }
        export interface ResCount {
        code: number;
        message: string;
        data?: user.Count;
        }
        export interface ResHealthCheck {
        code: number;
        message: string;
        }
        export interface UserService {
            register(
                data: ReqUserNameAndPassword,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResUserInfo>;
            login(
                data: ReqUserNameAndPassword,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResUserInfo>;
            getUserInfoByName(
                data: ReqUserInfoByName,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResUserInfo>;
            getUserInfoById(
                data: ReqUserInfoById,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResUserInfo>;
            delteUserById(
                data: ReqUserInfoById,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResCount>;
            updateUser(
                data: UserInfo,
                metadata?: Metadata,
                ...rest: any[]
            ): Observable<ResCount>;
        }
    }
}

