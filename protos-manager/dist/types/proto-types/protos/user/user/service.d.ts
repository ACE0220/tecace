/**
* This file is auto-generated by nestjs-proto-gen-ts
*/
import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';
export declare namespace acemall_user {
    namespace user {
        interface ReqUserNameAndPassword {
            userName: string;
            userPassword: string;
        }
        interface ReqUserInfoByName {
            userName: string;
        }
        interface ReqUserInfoById {
            userId: string;
        }
        interface UserInfo {
            userId?: number;
            userName: string;
            token?: string;
        }
        interface ResUserInfo {
            code: number;
            message: string;
            data?: user.UserInfo;
        }
        interface ResUserInfoArray {
            code: number;
            message: string;
            data?: user.UserInfo[];
        }
        interface Count {
            count: number;
        }
        interface ResCount {
            code: number;
            message: string;
            data?: user.Count;
        }
        interface ResHealthCheck {
            code: number;
            message: string;
        }
        interface UserService {
            register(data: ReqUserNameAndPassword, metadata?: Metadata, ...rest: any[]): Observable<ResUserInfo>;
            login(data: ReqUserNameAndPassword, metadata?: Metadata, ...rest: any[]): Observable<ResUserInfo>;
            getUserInfoByName(data: ReqUserInfoByName, metadata?: Metadata, ...rest: any[]): Observable<ResUserInfo>;
            getUserInfoById(data: ReqUserInfoById, metadata?: Metadata, ...rest: any[]): Observable<ResUserInfo>;
            delteUserById(data: ReqUserInfoById, metadata?: Metadata, ...rest: any[]): Observable<ResCount>;
            updateUser(data: UserInfo, metadata?: Metadata, ...rest: any[]): Observable<ResCount>;
        }
    }
}
