/**
* This file is auto-generated by nestjs-proto-gen-ts
*/
import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';
export declare namespace grpc {
    namespace health {
        namespace v1 {
            interface HealthCheckRequest {
                service?: string;
            }
            interface HealthCheckResponse {
                status?: HealthCheckResponse.ServingStatus;
            }
            namespace HealthCheckResponse {
                enum ServingStatus {
                    UNKNOWN = 0,
                    SERVING = 1,
                    NOT_SERVING = 2,
                    SERVICE_UNKNOWN = 3
                }
            }
            interface Empty {
            }
            interface Health {
                check(data: HealthCheckRequest, metadata?: Metadata, ...rest: any[]): Observable<HealthCheckResponse>;
                deregister(data: Empty, metadata?: Metadata, ...rest: any[]): Observable<Empty>;
                register(data: Empty, metadata?: Metadata, ...rest: any[]): Observable<Empty>;
                watch(data: HealthCheckRequest, metadata?: Metadata, ...rest: any[]): Observable<HealthCheckResponse>;
            }
        }
    }
}
